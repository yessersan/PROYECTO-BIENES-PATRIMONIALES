# Generated by Django 5.2.1 on 2025-06-02 15:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('vida_util', models.PositiveIntegerField(default=5, help_text='Vida útil en años')),
                ('tasa_depreciacion', models.DecimalField(decimal_places=2, default=10.0, help_text='Tasa anual de depreciación en porcentaje', max_digits=5)),
                ('activa', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('ADMIN', 'Administrador'), ('GESTOR', 'Gestor de bienes'), ('AUDITOR', 'Auditor'), ('CONSULTA', 'Consulta')], default='CONSULTA', max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('departamento', models.CharField(blank=True, max_length=100, null=True)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('ultimo_acceso', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BienPatrimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50, unique=True)),
                ('serie', models.CharField(blank=True, max_length=100, null=True)),
                ('descripcion', models.TextField()),
                ('marca', models.CharField(blank=True, max_length=100, null=True)),
                ('modelo', models.CharField(blank=True, max_length=100, null=True)),
                ('valor_adquisicion', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('fecha_adquisicion', models.DateField()),
                ('estado', models.CharField(choices=[('BUENO', 'Buen estado'), ('REGULAR', 'Estado regular'), ('MALO', 'Mal estado'), ('BAJA', 'Dado de baja'), ('REPARACION', 'En reparación')], default='BUENO', max_length=20)),
                ('depreciacion', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('valor_residual', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('activo', models.BooleanField(default=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='patrimonials.categoria')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentoAdjunto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('FACTURA', 'Factura'), ('GARANTIA', 'Garantía'), ('CONTRATO', 'Contrato'), ('FOTO', 'Fotografía'), ('OTRO', 'Otro documento')], max_length=20)),
                ('ruta_archivo', models.FileField(upload_to='documentos_bienes/')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_documento', models.DateField(blank=True, null=True)),
                ('bien', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='patrimonials.bienpatrimonial')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EtiquetaDigital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_qr', models.CharField(max_length=100, unique=True)),
                ('codigo_nfc', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('INACTIVO', 'Inactivo'), ('PERDIDO', 'Perdido'), ('DANADO', 'Dañado')], default='ACTIVO', max_length=20)),
                ('fecha_activacion', models.DateField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateField(auto_now=True)),
                ('imagen_qr', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('bien', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='etiqueta_digital', to='patrimonials.bienpatrimonial')),
            ],
        ),
        migrations.CreateModel(
            name='HistorialAuditoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('accion', models.CharField(max_length=100)),
                ('detalle', models.TextField()),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255, null=True)),
                ('bien', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auditorias', to='patrimonials.bienpatrimonial')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Historial de Auditoría',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Mantenimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('PREVENTIVO', 'Preventivo'), ('CORRECTIVO', 'Correctivo'), ('PREDICTIVO', 'Predictivo')], max_length=20)),
                ('descripcion', models.TextField()),
                ('fecha_programada', models.DateField()),
                ('fecha_inicio', models.DateField(blank=True, null=True)),
                ('fecha_fin', models.DateField(blank=True, null=True)),
                ('costo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('proveedor', models.CharField(blank=True, max_length=200, null=True)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('EN_PROCESO', 'En proceso'), ('COMPLETADO', 'Completado'), ('CANCELADO', 'Cancelado')], default='PENDIENTE', max_length=20)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('bien', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mantenimientos', to='patrimonials.bienpatrimonial')),
                ('usuario_registro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('INVENTARIO', 'Inventario'), ('DEPRECIACION', 'Depreciación'), ('ESTADO', 'Estado de bienes'), ('MOVIMIENTOS', 'Movimientos'), ('BAJAS', 'Bajas'), ('MANTENIMIENTOS', 'Mantenimientos')], max_length=20)),
                ('fecha_generacion', models.DateTimeField(auto_now_add=True)),
                ('contenido', models.TextField()),
                ('formato', models.CharField(choices=[('PDF', 'PDF'), ('EXCEL', 'Excel'), ('HTML', 'HTML'), ('CSV', 'CSV')], default='PDF', max_length=10)),
                ('parametros', models.JSONField(default=dict)),
                ('archivo', models.FileField(blank=True, null=True, upload_to='reportes/')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reportes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Responsable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo', models.CharField(max_length=100)),
                ('departamento', models.CharField(max_length=100)),
                ('fecha_asignacion', models.DateField(auto_now_add=True)),
                ('activo', models.BooleanField(default=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensaje', models.TextField()),
                ('fecha_envio', models.DateTimeField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('NO_LEIDO', 'No leído'), ('LEIDO', 'Leído'), ('ARCHIVADO', 'Archivado')], default='NO_LEIDO', max_length=20)),
                ('url', models.URLField(blank=True, null=True)),
                ('importante', models.BooleanField(default=False)),
                ('usuarios', models.ManyToManyField(blank=True, related_name='notificaciones', to=settings.AUTH_USER_MODEL)),
                ('responsables', models.ManyToManyField(blank=True, related_name='notificaciones', to='patrimonials.responsable')),
            ],
        ),
        migrations.AddField(
            model_name='bienpatrimonial',
            name='responsable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='patrimonials.responsable'),
        ),
        migrations.CreateModel(
            name='Ubicacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('edificio', models.CharField(max_length=100)),
                ('piso', models.CharField(max_length=20)),
                ('oficina', models.CharField(max_length=50)),
                ('direccion', models.TextField()),
                ('capacidad', models.PositiveIntegerField(default=1)),
                ('ocupados', models.PositiveIntegerField(default=0)),
                ('responsable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='patrimonials.responsable')),
            ],
        ),
        migrations.CreateModel(
            name='Movimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('ASIGNACION', 'Asignación'), ('TRASLADO', 'Traslado'), ('BAJA', 'Baja'), ('MANTENIMIENTO', 'Mantenimiento'), ('LIBERACION', 'Liberación'), ('REPARACION', 'Enviado a reparación'), ('RETORNO', 'Retorno de reparación')], max_length=20)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('descripcion', models.TextField()),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('bien', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimientos', to='patrimonials.bienpatrimonial')),
                ('usuario_registro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='patrimonials.responsable')),
                ('destino', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='movimientos_destino', to='patrimonials.ubicacion')),
                ('origen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='movimientos_origen', to='patrimonials.ubicacion')),
            ],
        ),
        migrations.AddField(
            model_name='bienpatrimonial',
            name='ubicacion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='patrimonials.ubicacion'),
        ),
    ]
